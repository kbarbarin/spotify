{"ast":null,"code":"var _jsxFileName = \"/Users/killianbarbarin/Desktop/spotify/src/pages/Home/DisplayResult/DisplayResult.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayResult(_ref) {\n  _s();\n  let {\n    results,\n    option\n  } = _ref;\n  const navigate = useNavigate();\n  const handleNavigation = element => {\n    if (option === \"playlist\") navigate('/playlist/' + element.id, {\n      state: {\n        playlist: element,\n        token: token\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: results.map(element => {\n      var _element$images, _element$album, _element$album$images;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleNavigation(element),\n        children: [element !== null && element !== void 0 && (_element$images = element.images) !== null && _element$images !== void 0 && _element$images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"10%\",\n          src: element.images[0].url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 48\n        }, this) : element !== null && element !== void 0 && (_element$album = element.album) !== null && _element$album !== void 0 && (_element$album$images = _element$album.images[1]) !== null && _element$album$images !== void 0 && _element$album$images.url ? /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"10%\",\n          src: element.album.images[1].url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 119\n        }, this), element.name]\n      }, element.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(DisplayResult, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = DisplayResult;\nvar _c;\n$RefreshReg$(_c, \"DisplayResult\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayResult","_ref","_s","results","option","navigate","handleNavigation","element","id","state","playlist","token","children","map","_element$images","_element$album","_element$album$images","onClick","images","length","width","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","album","name","_c","$RefreshReg$"],"sources":["/Users/killianbarbarin/Desktop/spotify/src/pages/Home/DisplayResult/DisplayResult.jsx"],"sourcesContent":["import { useNavigate } from \"react-router\";\n\nexport default function DisplayResult({ results, option }) {\n    const navigate = useNavigate();\n\n    const handleNavigation = (element) => {\n        if (option === \"playlist\")\n            navigate('/playlist/' + element.id, {state: {playlist: element, token: token}});\n    }\n\n    return (\n        <>\n            {results.map(element => (\n                <div onClick={() => handleNavigation(element)} key={element.id}>\n                    {element?.images?.length ? <img width={\"10%\"} src={element.images[0].url} alt=\"\" /> : \n                    element?.album?.images[1]?.url ? <img width={\"10%\"} src={element.album.images[1].url} alt=\"\" /> : <div>No Image</div>}\n                    {element.name}\n                </div>\n            ))}\n        </>\n\n    );\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACrD,MAAMI,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,gBAAgB,GAAIC,OAAO,IAAK;IAClC,IAAIH,MAAM,KAAK,UAAU,EACrBC,QAAQ,CAAC,YAAY,GAAGE,OAAO,CAACC,EAAE,EAAE;MAACC,KAAK,EAAE;QAACC,QAAQ,EAAEH,OAAO;QAAEI,KAAK,EAAEA;MAAK;IAAC,CAAC,CAAC;EACvF,CAAC;EAED,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACKT,OAAO,CAACU,GAAG,CAACN,OAAO;MAAA,IAAAO,eAAA,EAAAC,cAAA,EAAAC,qBAAA;MAAA,oBAChBnB,OAAA;QAAKoB,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACC,OAAO,CAAE;QAAAK,QAAA,GACzCL,OAAO,aAAPA,OAAO,gBAAAO,eAAA,GAAPP,OAAO,CAAEW,MAAM,cAAAJ,eAAA,eAAfA,eAAA,CAAiBK,MAAM,gBAAGtB,OAAA;UAAKuB,KAAK,EAAE,KAAM;UAACC,GAAG,EAAEd,OAAO,CAACW,MAAM,CAAC,CAAC,CAAC,CAACI,GAAI;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GACnFpB,OAAO,aAAPA,OAAO,gBAAAQ,cAAA,GAAPR,OAAO,CAAEqB,KAAK,cAAAb,cAAA,gBAAAC,qBAAA,GAAdD,cAAA,CAAgBG,MAAM,CAAC,CAAC,CAAC,cAAAF,qBAAA,eAAzBA,qBAAA,CAA2BM,GAAG,gBAAGzB,OAAA;UAAKuB,KAAK,EAAE,KAAM;UAACC,GAAG,EAAEd,OAAO,CAACqB,KAAK,CAACV,MAAM,CAAC,CAAC,CAAC,CAACI,GAAI;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAG9B,OAAA;UAAAe,QAAA,EAAK;QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpHpB,OAAO,CAACsB,IAAI;MAAA,GAHmCtB,OAAO,CAACC,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIzD,CAAC;IAAA,CACT;EAAC,gBACJ,CAAC;AAGX;AAACzB,EAAA,CApBuBF,aAAa;EAAA,QAChBL,WAAW;AAAA;AAAAmC,EAAA,GADR9B,aAAa;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}