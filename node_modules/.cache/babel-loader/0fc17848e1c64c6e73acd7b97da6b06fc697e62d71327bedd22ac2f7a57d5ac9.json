{"ast":null,"code":"var _jsxFileName = \"/Users/killianbarbarin/Desktop/spotify/src/pages/Home/DisplayResult/DisplayResult.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayResult(_ref) {\n  _s();\n  let {\n    results,\n    option,\n    token\n  } = _ref;\n  const navigate = useNavigate();\n  const handleNavigation = element => {\n    console.log(token);\n    if (option === \"playlist\") navigate('/playlist/' + element.id, {\n      state: {\n        playlist: element,\n        token: token\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: results.map(element => {\n      var _element$images, _element$album, _element$album$images;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleNavigation(element),\n        children: [element !== null && element !== void 0 && (_element$images = element.images) !== null && _element$images !== void 0 && _element$images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"10%\",\n          src: element.images[0].url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 48\n        }, this) : element !== null && element !== void 0 && (_element$album = element.album) !== null && _element$album !== void 0 && (_element$album$images = _element$album.images[1]) !== null && _element$album$images !== void 0 && _element$album$images.url ? /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"10%\",\n          src: element.album.images[1].url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 119\n        }, this), element.name]\n      }, element.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(DisplayResult, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = DisplayResult;\nvar _c;\n$RefreshReg$(_c, \"DisplayResult\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayResult","_ref","_s","results","option","token","navigate","handleNavigation","element","console","log","id","state","playlist","children","map","_element$images","_element$album","_element$album$images","onClick","images","length","width","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","album","name","_c","$RefreshReg$"],"sources":["/Users/killianbarbarin/Desktop/spotify/src/pages/Home/DisplayResult/DisplayResult.jsx"],"sourcesContent":["import { useNavigate } from \"react-router\";\n\nexport default function DisplayResult({ results, option, token }) {\n    const navigate = useNavigate();\n\n    const handleNavigation = (element) => {\n        console.log(token);\n        if (option === \"playlist\")\n            navigate('/playlist/' + element.id, {state: {playlist: element, token: token}});\n    }\n\n    return (\n        <>\n            {results.map(element => (\n                <div onClick={() => handleNavigation(element)} key={element.id}>\n                    {element?.images?.length ? <img width={\"10%\"} src={element.images[0].url} alt=\"\" /> : \n                    element?.album?.images[1]?.url ? <img width={\"10%\"} src={element.album.images[1].url} alt=\"\" /> : <div>No Image</div>}\n                    {element.name}\n                </div>\n            ))}\n        </>\n\n    );\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAC5D,MAAMK,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,gBAAgB,GAAIC,OAAO,IAAK;IAClCC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IAClB,IAAID,MAAM,KAAK,UAAU,EACrBE,QAAQ,CAAC,YAAY,GAAGE,OAAO,CAACG,EAAE,EAAE;MAACC,KAAK,EAAE;QAACC,QAAQ,EAAEL,OAAO;QAAEH,KAAK,EAAEA;MAAK;IAAC,CAAC,CAAC;EACvF,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACKX,OAAO,CAACY,GAAG,CAACP,OAAO;MAAA,IAAAQ,eAAA,EAAAC,cAAA,EAAAC,qBAAA;MAAA,oBAChBrB,OAAA;QAAKsB,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACC,OAAO,CAAE;QAAAM,QAAA,GACzCN,OAAO,aAAPA,OAAO,gBAAAQ,eAAA,GAAPR,OAAO,CAAEY,MAAM,cAAAJ,eAAA,eAAfA,eAAA,CAAiBK,MAAM,gBAAGxB,OAAA;UAAKyB,KAAK,EAAE,KAAM;UAACC,GAAG,EAAEf,OAAO,CAACY,MAAM,CAAC,CAAC,CAAC,CAACI,GAAI;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GACnFrB,OAAO,aAAPA,OAAO,gBAAAS,cAAA,GAAPT,OAAO,CAAEsB,KAAK,cAAAb,cAAA,gBAAAC,qBAAA,GAAdD,cAAA,CAAgBG,MAAM,CAAC,CAAC,CAAC,cAAAF,qBAAA,eAAzBA,qBAAA,CAA2BM,GAAG,gBAAG3B,OAAA;UAAKyB,KAAK,EAAE,KAAM;UAACC,GAAG,EAAEf,OAAO,CAACsB,KAAK,CAACV,MAAM,CAAC,CAAC,CAAC,CAACI,GAAI;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGhC,OAAA;UAAAiB,QAAA,EAAK;QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpHrB,OAAO,CAACuB,IAAI;MAAA,GAHmCvB,OAAO,CAACG,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIzD,CAAC;IAAA,CACT;EAAC,gBACJ,CAAC;AAGX;AAAC3B,EAAA,CArBuBF,aAAa;EAAA,QAChBL,WAAW;AAAA;AAAAqC,EAAA,GADRhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}