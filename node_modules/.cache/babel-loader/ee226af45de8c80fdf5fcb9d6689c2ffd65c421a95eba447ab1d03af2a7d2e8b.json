{"ast":null,"code":"import axios from \"axios\";\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\nexport default function connect(_ref) {\n  let {\n    tokens,\n    setToken\n  } = _ref;\n  const authOptions = {\n    url: 'https://accounts.spotify.com/api/token',\n    headers: {\n      'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    form: {\n      grant_type: 'client_credentials'\n    },\n    json: true\n  };\n  axios.post(authOptions.url, authOptions.form, {\n    headers: authOptions.headers\n  }).then(response => {\n    if (response.status === 200) {\n      const token = response.data.access_token;\n      console.log('token = ' + tokens);\n      console.log('token = ' + token);\n      setToken(token);\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}","map":{"version":3,"names":["axios","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","connect","_ref","tokens","setToken","authOptions","url","headers","btoa","form","grant_type","json","post","then","response","status","token","data","access_token","console","log","catch","error"],"sources":["/Users/killianbarbarin/Desktop/spotify-clone/spotify-clone/src/api/connect.js"],"sourcesContent":["import axios from \"axios\";\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nexport default function connect({tokens, setToken}) {\n\n    const authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n            'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET),\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        form: {\n            grant_type: 'client_credentials'\n        },\n        json: true\n    };\n\n    axios.post(authOptions.url, authOptions.form, { headers: authOptions.headers })\n        .then(response => {\n            if (response.status === 200) {\n                const token = response.data.access_token;\n                console.log('token = ' + tokens);\n                console.log('token = ' + token);\n                setToken(token);\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AACjD,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAG,CAACG,uBAAuB;AAEzD,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAACC,MAAM;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAE9C,MAAMG,WAAW,GAAG;IAChBC,GAAG,EAAE,wCAAwC;IAC7CC,OAAO,EAAE;MACL,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAACb,SAAS,GAAG,GAAG,GAAGI,aAAa,CAAC;MACjE,cAAc,EAAE;IACpB,CAAC;IACDU,IAAI,EAAE;MACFC,UAAU,EAAE;IAChB,CAAC;IACDC,IAAI,EAAE;EACV,CAAC;EAEDjB,KAAK,CAACkB,IAAI,CAACP,WAAW,CAACC,GAAG,EAAED,WAAW,CAACI,IAAI,EAAE;IAAEF,OAAO,EAAEF,WAAW,CAACE;EAAQ,CAAC,CAAC,CAC1EM,IAAI,CAACC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,YAAY;MACxCC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGjB,MAAM,CAAC;MAChCgB,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGJ,KAAK,CAAC;MAC/BZ,QAAQ,CAACY,KAAK,CAAC;IACnB;EACJ,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}