{"ast":null,"code":"var _jsxFileName = \"/Users/killianbarbarin/Desktop/spotify-clone/spotify-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const CLIENT_ID = \"c38ca31d770c426cb3f1c5219a524734\";\n  const REDIRECT_URI = \"http://localhost:3000\";\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n  const RESPONSE_TYPE = \"token\";\n  const [token, setToken] = useState(\"\");\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  useEffect(() => {}, []);\n  const searchArtists = async e => {\n    e.preventDefault();\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchKey,\n        type: \"artist\"\n      }\n    });\n    setArtists(data.artists.items);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spotify React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: token && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: searchArtists,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setSearchKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this), artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [artist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"10%\",\n            src: artist.images[0].url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 97\n          }, this), artist.name]\n        }, artist.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lpmpfbbZ2WMCOLByj2DsFjXgtms=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","token","setToken","searchKey","setSearchKey","artists","setArtists","searchArtists","e","preventDefault","data","get","headers","Authorization","params","q","type","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","value","map","artist","images","length","width","src","url","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/killianbarbarin/Desktop/spotify-clone/spotify-clone/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const CLIENT_ID = \"c38ca31d770c426cb3f1c5219a524734\"\n  const REDIRECT_URI = \"http://localhost:3000\"\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\n  const RESPONSE_TYPE = \"token\"\n\n  const [token, setToken] = useState(\"\")\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  useEffect(() => {\n\n  }, [])\n\n  const searchArtists = async (e) => {\n    e.preventDefault()\n    const { data } = await axios.get(\"https://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchKey,\n        type: \"artist\"\n      }\n    })\n\n    setArtists(data.artists.items)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Spotify React</h1>\n      </header>\n      <div>\n        {token && <div><form onSubmit={searchArtists}>\n          <input type=\"text\" onChange={e => setSearchKey(e.target.value)} />\n          <button type={\"submit\"}>Search</button>\n        </form>\n          {artists.map(artist => (\n            <div key={artist.id}>\n              {artist.images.length ? <img width={\"10%\"} src={artist.images[0].url} alt=\"\" /> : <div>No Image</div>}\n              {artist.name}\n            </div>\n          ))}\n        </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}